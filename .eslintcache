[{"/Users/paulstevens/Developer/portfolio-site/src/index.js":"1","/Users/paulstevens/Developer/portfolio-site/src/App.js":"2","/Users/paulstevens/Developer/portfolio-site/src/reportWebVitals.js":"3","/Users/paulstevens/Developer/portfolio-site/src/LandingPage.js":"4","/Users/paulstevens/Developer/portfolio-site/src/Header.js":"5","/Users/paulstevens/Developer/portfolio-site/src/Career.js":"6","/Users/paulstevens/Developer/portfolio-site/src/career-json.js":"7","/Users/paulstevens/Developer/portfolio-site/src/Projects.js":"8","/Users/paulstevens/Developer/portfolio-site/src/project-json.js":"9","/Users/paulstevens/Developer/portfolio-site/src/AboutMe.js":"10","/Users/paulstevens/Developer/portfolio-site/src/aboutme-data.js":"11","/Users/paulstevens/Developer/portfolio-site/src/Contact.js":"12"},{"size":500,"mtime":1608666695625,"results":"13","hashOfConfig":"14"},{"size":878,"mtime":1609264487961,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608666695626,"results":"16","hashOfConfig":"14"},{"size":5242,"mtime":1609200678878,"results":"17","hashOfConfig":"14"},{"size":2578,"mtime":1609205143735,"results":"18","hashOfConfig":"14"},{"size":5169,"mtime":1609201457105,"results":"19","hashOfConfig":"14"},{"size":1832,"mtime":1609201568587,"results":"20","hashOfConfig":"14"},{"size":5739,"mtime":1609204959160,"results":"21","hashOfConfig":"14"},{"size":2730,"mtime":1609185706646,"results":"22","hashOfConfig":"14"},{"size":1857,"mtime":1609198703279,"results":"23","hashOfConfig":"14"},{"size":2423,"mtime":1609265033496,"results":"24","hashOfConfig":"14"},{"size":4063,"mtime":1609264640195,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"19jnwlz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/paulstevens/Developer/portfolio-site/src/index.js",[],["52","53"],"/Users/paulstevens/Developer/portfolio-site/src/App.js",["54"],"/Users/paulstevens/Developer/portfolio-site/src/reportWebVitals.js",[],"/Users/paulstevens/Developer/portfolio-site/src/LandingPage.js",[],"/Users/paulstevens/Developer/portfolio-site/src/Header.js",[],"/Users/paulstevens/Developer/portfolio-site/src/Career.js",[],"/Users/paulstevens/Developer/portfolio-site/src/career-json.js",[],"/Users/paulstevens/Developer/portfolio-site/src/Projects.js",["55"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport backgroundImage from './images/background.jpg';\nimport { Grid, Box, Button, Typography } from '@material-ui/core';\n// import LanguageIcon from '@material-ui/icons/Language';\nimport projectJson from './project-json.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center top',\n        width: '100%',\n        height: '100%',\n        minWidth: '100vw',\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    box: {\n        width: '90%',\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        color: '#1f3a4e',\n        fontSize: \"3em\",\n        margin: '10px',\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyItems: 'center',\n        alignItems: 'center',\n        paddingTop: '10vh',\n    },\n    button_row: {\n        width: \"90vw\",\n        maxWidth: \"1000px\",\n        display: \"flex\",\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n    },\n    button: {\n        backgroundColor: '#1f3a4e',\n        color: '#fbf9ec',\n        maxWidth: '30%',\n    },\n    logo_row: {\n        backgroundColor: 'rgba(27, 50, 67, 0.4)',\n        padding: '10px 20px 0px 20px',\n        borderRadius: '50px',\n    },\n    logo: {\n        width: '40px',\n        padding: '5px'\n    },\n    description: {\n        width: '90%',\n        maxWidth: '900px',\n        padding: ''\n    },\n\n    text_box: {\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        padding: '0px 10px 0px 10px',\n        marginTop: '30px',\n    },\n    image: {\n        width: '90%',\n        maxWidth: '700px',\n        margin: '25px',\n        alignSelf: 'center',\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    github_link: {\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        padding: '10px',\n        margin: '10px',\n        borderRadius: '50px',\n        width: '50px',\n        height: '50px',\n    },\n    grid: {\n        paddingTop: '12vh',\n    },\n}))\n\nexport const Projects = () => {\n    const classes = useStyles();\n    const [displayedProject, setDisplayedProject] = useState(projectJson[0]);\n\n    const handleClick = (project) => {\n        setDisplayedProject(project);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid\n                className={classes.grid}\n                container direction=\"column\"\n                justify=\"space-evenly\"\n                alignItems=\"center\">\n\n                <div className={classes.button_row}>\n                    {projectJson.map(project => {\n                        return <Button\n                            variant=\"contained\"\n                            size=\"small\"\n                            onClick={() => handleClick(project)}\n                            className={classes.button}\n                            disabled={displayedProject.title === project.title ?\n                                true :\n                                false\n                            }\n                        >\n                            {project.title}\n                        </Button>\n                    })}\n                </div>\n\n                <Grid className={classes.box}\n                    container direction=\"column\"\n                    justify=\"space-evenly\"\n                    alignItems=\"center\">\n                    <div className={classes.body}>\n                        <a href={displayedProject.url}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                            className={classes.body}>\n                            <img\n                                className={classes.image}\n                                src={displayedProject.image}\n                                alt={displayedProject.title}\n                            />\n                        </a>\n                        <div className={classes.logo_row}>\n                            {displayedProject.logos.map(logo => {\n                                return <img\n                                    src={logo}\n                                    alt={logo}\n                                    className={classes.logo}\n                                />\n                            })}\n                        </div>\n                    </div>\n                    <div className={classes.text_box}>\n                        {displayedProject.description.map(text => {\n                            return <p>\n                                <Typography\n                                    className={classes.description}\n                                    variant=\"body1\">\n                                    {text}\n                                </Typography>\n\n                            </p>\n                        })}\n                    </div>\n                    <a href={displayedProject.github}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <div className={classes.github_link}>\n                            <img\n                                className={classes.logo}\n                                src={'/github.png'}\n                                alt={displayedProject.title}\n                            />\n                        </div>\n                    </a>\n                </Grid>\n            </Grid>\n\n        </div >\n\n    )\n}\n\nexport default Projects;","/Users/paulstevens/Developer/portfolio-site/src/project-json.js",[],"/Users/paulstevens/Developer/portfolio-site/src/AboutMe.js",[],"/Users/paulstevens/Developer/portfolio-site/src/aboutme-data.js",[],"/Users/paulstevens/Developer/portfolio-site/src/Contact.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":17,"column":9,"nodeType":"62","messageId":"63","endLine":17,"endColumn":15},{"ruleId":"60","severity":1,"message":"64","line":4,"column":16,"nodeType":"62","messageId":"63","endLine":4,"endColumn":19},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'reload' is assigned a value but never used.","Identifier","unusedVar","'Box' is defined but never used.","no-global-assign","no-unsafe-negation"]